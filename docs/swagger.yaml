basePath: /
definitions:
  delivery.ErrorResponse:
    properties:
      error:
        example: error
        type: string
      message:
        example: message
        type: string
    type: object
  models.Item:
    properties:
      created_at:
        type: string
      description:
        example: Fancy Glass
        type: string
      id:
        type: integer
      item_code:
        example: BXC-100
        type: string
      order_id:
        type: integer
      quantity:
        example: 3
        type: integer
      updated_at:
        type: string
    type: object
  models.Order:
    properties:
      created_at:
        type: string
      customer_name:
        example: John Dee
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Item'
        type: array
      ordered_at:
        example: "2022-10-07T18:19:24.161481554+07:00"
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: szczynk@gmail.com
    name: szczynk
  description: a simple service for managing orders
  license:
    name: MIT License
    url: https://opensource.org/licenses/MIT
  title: Orders API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: do ping
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: check health
      tags:
      - example
  /orders:
    get:
      consumes:
      - application/json
      description: get orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Order'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Fetch orders
      tags:
      - orders
    post:
      consumes:
      - application/json
      description: create and store an order
      parameters:
      - description: Order
        in: body
        name: message
        required: true
        schema:
          $ref: '#/definitions/models.Order'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Create an order
      tags:
      - orders
  /orders/{id}:
    delete:
      consumes:
      - application/json
      description: delete an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      description: get an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Order'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Show an order
      tags:
      - orders
    put:
      consumes:
      - application/json
      description: update an order by ID
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/delivery.ErrorResponse'
      summary: Update an order
      tags:
      - orders
swagger: "2.0"
